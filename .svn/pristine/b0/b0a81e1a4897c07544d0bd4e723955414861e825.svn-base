<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 7</value>
  </metadata>
  <metadata name="bw_RFID_dealy.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>153, 7</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>47</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAABAQAAABAAgAaAUAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AADEDgAAxA4AAAAAAAAAAAAAMmWMMjRki7UuX4szrMHTAP///wD///8A////AMvLywDLy8sAy8vLAMvL
        ywDLy8v/u7u7/8XFxf////8A////AEh4n/9BhLr/NWeR/zFjj0a0xtgA////AP///wCUlJQAnZ2dAKam
        pgCvr68Atra2//////+7u7v/////AP///wBVg6r/pcvq/0SIwv85bZX/NWiVSLjO3AD///8AlJSUAJ2d
        nQCmpqYAr6+v//7+/v+vr6//srKy/////wD///8APXKci1WJrf+jy+7/R43G/z51n/88dZxGvtHgAJSU
        lACdnZ0Apqam//39/f+mpqb/r6+vALKysgD///8A////AKK80gBBfaaJW4+0/6bN7v9Ols3/Qn+n/0F5
        pkeUlJQAnZ2d//z8/P+dnZ3/pqamAK+vrwCysrIA////AP///wCJQCcAjD8nAEqErodgmLz/qNTx/1Wg
        1f+NjY3/lJSU//v7+/+UlJT/nZ2dAKampgCvr68AsrKyAP///wD///8Av5WIAL+ViAC/lYgATo62iJOb
        pf+MPyj/wm8y/91/N/+NjY3/////AJ2dnQCmpqYAr6+vALKysgDh4+IA////AL+ViAC/lYgAv5WIAL+V
        iH+LQCr8wm8y/91/N//sy6z/jY2N/1OZwEXUzc4A1NXWANzc2wDg4eAAcXBxH+Hg4QC/lYgAv5WIAL+V
        iH+MPyj5wm8y/91/N//sy6z/yJBs/72Wiv9eo8j/xcXF/3t4egLW1tYAeHp5DHl7e/h0dXZIv5WIAL+V
        iH+MPyj5wm8y/91/N//sy6z/yJBs/7aZkf+02/H/eYSJ/5yamP+AgIDlgYGBO4KCgee6vLv/fnx877+V
        iH+MPyj5wm8y/91/N//sy6z/yJBs/7+Vh4Jvqstbh4yQ97WysP/a2dj/wcHB/4eHhvPAvr7/jo6O9YiI
        h3yIPif5wm8y/91/N//sy6z/yJBs/7+Vh4K/lYgDv5WIAJmUkdbDxMH/4+Pk/+nl5v/w7+//np+f/5aX
        lg3P0dAAij4n+dx+N//ty6z/yJBs/7+Vh4K/lYgDv5WIAL+ViAChn6AXmZma+fHv8v/6+Pn/y8zL/52d
        nsTR0tIA////AL+ViH+0UTL5x41p/7+Vh4Ktra3wra2t56utquGsrazWrKus+uDh4f/w7u//ysrK/6mn
        qL6mqagG////AP///wD///8A+vv7ANna2wDe3d4AtbW2Bra2tke3tbaWt7W237S1tfmytLP9sLO0ybGv
        sVjY2dkA1tXWAP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP/jAAAf4wAAD8MAAIePAADDHwAA4D8AAPB/AAD4fwAA8B8AAOAd
        AADDiwAAh4MAAI/HAADfjwAA//8AAP//AAAoAAAAEAAAACAAAAABAAgAAAAAAAABAADEDgAAxA4AAAAB
        AAAAAAAAij4nAKzB0wAuX4sAiIiHAPDv7wDCbzIAc3N0AKampgDsy6wASoSuAL+VhwDExMMAx41pANvb
        2wCxr7EAYJi8AJObpQA9dJ0A3X83AKXM7QD///8AorzSAIODggDP0dAAtFEyAEGEugBvqssAqaeoALu7
        uwBOls0AlJSUAMvLywDh4uIAh4yQALjO3AC02/EATo62AEh4nwBeo8gANWeRAHt6ewCdnZ0AeYSJALS0
        tAC2mZEArq6uAEaLxAChn6AAVYOqAEF8pgBVoNUA6eXmAFOZwACo1PEA1NXVANTNzgBbj7QAjY2NALTG
        2AAyZI0AmZSRADltlQDAvr4AvtHgAIw/KABVia0AyJBsAL+ViACJQCcApqmoADVolQDx7/IAi0AqAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP87////////////HxwL//8lGSf//////////ysUHP//MBMuPf///////y0ULSv//xFB
        Ey4R/////wcUB///////MTgTHTH//ykUKf////////8JDzUyOR4UHv///////////yQQQAUSOf//////
        ////////SAUSCDn/////////////QAUSCEJDJgv///8o////QAUSCEIsIyopFv8WHCj/QAUSCEIK/yEr
        DQsWPjn/AAUSCEIK//88CyAzBCn//wASCEIK/////ylHFB8p////GAwKLS0tLS0gBB8b////////////
        KysrKyv///////////////////////////+/4wAAH+MAAA/DAAAHjwAAgx8AAMA/AADgfwAA8H8AAOAd
        AADACAAAgQEAAAMDAAAHgwAAgAcAAPwfAAD//wAA
</value>
  </data>
</root>